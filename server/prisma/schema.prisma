generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model menu_items {
  id            Int             @id @default(autoincrement())
  category      String
  name          String
  co2_saved     Decimal         @db.Decimal(10, 2)
  water_saved   Int
  land_saved    Decimal         @db.Decimal(10, 2)
  created_at    DateTime        @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at    DateTime        @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  receipt_items receipt_items[]

  @@index([category], map: "idx_menu_items_category")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model receipt_items {
  id           String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  receipt_id   String?     @db.Uuid
  menu_item_id Int?
  quantity     Int
  created_at   DateTime    @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  menu_items   menu_items? @relation(fields: [menu_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  receipts     receipts?   @relation(fields: [receipt_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([menu_item_id], map: "idx_receipt_items_menu_item_id")
  @@index([receipt_id], map: "idx_receipt_items_receipt_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model receipts {
  id                String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  receipt_code      String?         @unique @db.Char(8)
  user_id           String?         @db.Uuid
  total_co2_saved   Decimal         @db.Decimal(10, 2)
  total_water_saved Int
  total_land_saved  Decimal         @db.Decimal(10, 2)
  points_earned     Int
  created_at        DateTime        @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at        DateTime        @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  receipt_items     receipt_items[]
  users             users?          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at], map: "idx_receipts_created_at")
  @@index([receipt_code], map: "idx_receipts_code")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model restaurants {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String
  description String?
  image_url   String?
  created_at  DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at  DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model rewards {
  id              String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name            String
  description     String
  points_required Int
  image_url       String?
  available       Boolean        @default(true)
  created_at      DateTime       @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at      DateTime       @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  user_rewards    user_rewards[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_rewards {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id     String?  @db.Uuid
  reward_id   String?  @db.Uuid
  redeemed_at DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  rewards     rewards? @relation(fields: [reward_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users       users?   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, reward_id])
  @@index([reward_id], map: "idx_user_rewards_reward_id")
  @@index([user_id], map: "idx_user_rewards_user_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id           String         @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email        String         @unique
  name         String
  role         String
  points       Int            @default(0)
  created_at   DateTime       @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at   DateTime       @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  receipts     receipts[]
  user_rewards user_rewards[]

  @@index([created_at], map: "idx_users_created_at")
  @@index([email], map: "idx_users_email")
}
